import React from 'react';
import Form from 'react-validation/build/form';
import Input from 'react-validation/build/input';
import Button from 'react-validation/build/button';
import required from 'required';
import Constants from "Constants";
import showToast from "showToast";
import createHistoryAPI from "createHistoryAPI";
import Select from "react-select";


class ImportDriverTypeCylinder extends React.Component {

    constructor(props) {
        super(props);
        this.form = null;
        this.state = {
            content: '',
            listProducts: [],
            AgencyResults: [],
            GeneralResults: [],
            typeUser: [],
            ListUserSubmit: "",
            ListUserSubmitID:""
        };
    }

    async addHistory(driver, license_plate,cylinders, number_cylinder) {
        const {typeExportCylinder} = this.props
        // Call api
        console.log(this.state.ListUserSubmitID);
        //var toId = isFixer ? parentRoot : this.state.ListUserSubmitID
        console.log('register:::: ', typeExportCylinder);
        this.setState({isLoading: true});
        const user = await createHistoryAPI(driver, license_plate, cylinders, Constants.IMPORT_TYPE, this.state.ListUserSubmitID, '', number_cylinder, '', '', '', '', '', '', typeExportCylinder);
        this.setState({isLoading: false});
        //console.log('register',user);
        if (user) {
            if (user.status === Constants.HTTP_SUCCESS_CREATED || user.status === Constants.HTTP_SUCCESS_BODY) {
                showToast('Nhập hàng thành công!', 3000);
                this.props.handleChangeTypeExportCylinderEmpty()
                const modal = $("#import-driver-type-fixer");
                modal.modal('hide');
                //this.props.refresh();
                return true;
            } else {
                showToast(user.data.message ? user.data.message : user.data.err_msg, 2000);
                return false;
            }
        } else {
            showToast("Xảy ra lỗi trong quá trình tạo bình ");
            return false;
        }

        //this.setState({registerSuccessful: false});
    }

    handleChangeGeneral = (langValue) => {
        this.setState({ListUserSubmit: langValue,ListUserSubmitID: langValue.id});

    }

    async submit(event) {
        event.preventDefault();
        var cylinders = [];
        for (let i = 0; i < this.props.product_parse.length; i++) {
            cylinders.push(this.props.product_parse[i].id);
        }

        let data = this.form.getValues();
        await this.addHistory(data.driver, data.license_plate,cylinders, data.number_cylinder);
        return;
    }
    render() {
        const nameExport = "Thương Nhân Sở Hữu"
        return (
            <div className="modal fade" id="import-driver-type-fixer" tabIndex="-1">
                <div className="modal-dialog modal-lg">
                    <div className="modal-content">
                        <div className="modal-header">
                            <h5 className="modal-title">Nhập bình - Bước 2 - Thông Tin Tài Xế</h5>
                            <button type="button" className="close" data-dismiss="modal">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div className="modal-body">
                            <Form ref={c => {
                                this.form = c
                            }} className="card" onSubmit={(event) => this.submit(event, this.props.typeExportCylinder)}>
                                <div className="card-body">
                                    <div className="row">
                                        <div className="col-md-6">
                                            <div className="form-group">
                                                <label>Tên tài xế</label>
                                                <Input className="form-control" type="text" name="driver"
                                                       validations={[required]}/>
                                            </div>


                                        </div>
                                        <div className="col-md-6">
                                            <div className="form-group">
                                                <label>Bản số xe </label>
                                                <Input className="form-control" type="text" name="license_plate"
                                                       id="license_plate" validations={[required]}/>
                                            </div>
                                        </div>
                                        <div className="col-md-6">
                                            <div className="form-group">
                                                <label>{nameExport}</label>
                                                <Select
                                                    options={this.props.typeExportCylinder !== Constants.TO_FIX ? this.props.listUsersPartner : this.props.listUsersPartner}
                                                    onChange={this.handleChangeGeneral.bind(this)}
                                                    placeholder="Chọn..."
                                                    value={this.state.ListUserSubmit}
                                                />
                                            </div>
                                        </div>
                                        <div className="col-md-6">
                                            <div className="form-group">
                                                <label>Số Lượng Bình Không Mã</label>
                                                <Input className="form-control" type="text" name="number_cylinder"
                                                       id="number_cylinder"/>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <footer className="card-footer text-center">
                                    <Button className="btn btn-primary" type="submit">Lưu</Button>
                                    <button className="btn btn-secondary" type="reset" data-dismiss="modal"
                                            style={{marginLeft: "10px"}}>Đóng
                                    </button>
                                </footer>
                            </Form>

                        </div>
                    </div>
                </div>
            </div>
        );
    }
}

export default ImportDriverTypeCylinder;
